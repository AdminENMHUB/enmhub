// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/age" | "/albums" | "/albums/[albumId]" | "/chat" | "/contact" | "/education" | "/forums" | "/login" | "/privacy" | "/profile" | "/safety" | "/schedule" | "/signup" | "/terms" | "/wall"
type AppRouteHandlerRoutes = "/admin/embeddings/backfill" | "/api/admin/album-access" | "/api/admin/hide" | "/api/admin/reports" | "/api/age/accept" | "/api/ai/aesthetic" | "/api/albums" | "/api/albums/[albumId]/access" | "/api/albums/[albumId]/photos" | "/api/blocks" | "/api/embeddings/rebuild" | "/api/embeddings/upsert" | "/api/match/recommendations" | "/api/match/recommendations/advanced" | "/api/match/recommendations/blended" | "/api/posts" | "/api/profile/preferences" | "/api/profile/upsert" | "/api/reports" | "/api/send-email" | "/api/signup" | "/api/upload" | "/api/uploads/sign"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/embeddings/backfill": {}
  "/age": {}
  "/albums": {}
  "/albums/[albumId]": { "albumId": string; }
  "/api/admin/album-access": {}
  "/api/admin/hide": {}
  "/api/admin/reports": {}
  "/api/age/accept": {}
  "/api/ai/aesthetic": {}
  "/api/albums": {}
  "/api/albums/[albumId]/access": { "albumId": string; }
  "/api/albums/[albumId]/photos": { "albumId": string; }
  "/api/blocks": {}
  "/api/embeddings/rebuild": {}
  "/api/embeddings/upsert": {}
  "/api/match/recommendations": {}
  "/api/match/recommendations/advanced": {}
  "/api/match/recommendations/blended": {}
  "/api/posts": {}
  "/api/profile/preferences": {}
  "/api/profile/upsert": {}
  "/api/reports": {}
  "/api/send-email": {}
  "/api/signup": {}
  "/api/upload": {}
  "/api/uploads/sign": {}
  "/chat": {}
  "/contact": {}
  "/education": {}
  "/forums": {}
  "/login": {}
  "/privacy": {}
  "/profile": {}
  "/safety": {}
  "/schedule": {}
  "/signup": {}
  "/terms": {}
  "/wall": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
